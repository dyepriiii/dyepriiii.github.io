<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>jtp.sh</title><link href="https://jtp.sh/" rel="alternate"></link><link href="https://jtp.sh/feeds/all.atom.xml" rel="self"></link><id>https://jtp.sh/</id><updated>2019-02-10T23:53:40+08:00</updated><entry><title>Learning Docker Swarms</title><link href="https://jtp.sh/learning-docker-swarms.html" rel="alternate"></link><published>2019-02-10T23:53:40+08:00</published><updated>2019-02-10T23:53:40+08:00</updated><author><name>jp</name></author><id>tag:jtp.sh,2019-02-10:/learning-docker-swarms.html</id><summary type="html">&lt;h3&gt;Intro&lt;/h3&gt;
&lt;p&gt;This is the second part of my attempt at learning Docker. I looked at Docker swarms this time.&lt;/p&gt;
&lt;h3&gt;The setup&lt;/h3&gt;
&lt;p&gt;I have 3 VMs running on the same network:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ubuntu01-manager&lt;/code&gt; - delegated manager&lt;br&gt;
&lt;code&gt;ubuntu02&lt;/code&gt; - worker 1&lt;br&gt;
&lt;code&gt;ubuntu03&lt;/code&gt; - worker 2&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jtpsh/learning-docker/blob/master/bootstrap.yml"&gt;A bootstrap playbook to setup Docker CE.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Protip: docker CLI has …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Intro&lt;/h3&gt;
&lt;p&gt;This is the second part of my attempt at learning Docker. I looked at Docker swarms this time.&lt;/p&gt;
&lt;h3&gt;The setup&lt;/h3&gt;
&lt;p&gt;I have 3 VMs running on the same network:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ubuntu01-manager&lt;/code&gt; - delegated manager&lt;br&gt;
&lt;code&gt;ubuntu02&lt;/code&gt; - worker 1&lt;br&gt;
&lt;code&gt;ubuntu03&lt;/code&gt; - worker 2&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jtpsh/learning-docker/blob/master/bootstrap.yml"&gt;A bootstrap playbook to setup Docker CE.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Protip: docker CLI has tab-completions, command options are available as well.&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Creating a swarm&lt;/h3&gt;
&lt;p&gt;Creating swarm manager:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker swarm init --advertise-addr &amp;lt;IP&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It is important the manager has static IP.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker swarm init --advertise-addr 192.168.254.107
Swarm initialized: current node (jld72ruw3baib8ws6t7ap0hnj) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-5hidm3k2ihs0m938oqvzpa22jt5ueezpcohi999cojeoebz279-272b0wt3h8qzgtiab447rsl9g 192.168.254.107:2377

To add a manager to this swarm, run &amp;#39;docker swarm join-token manager&amp;#39; and follow the instructions.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The command output shows instructions on how to let other nodes join the swarm.&lt;/p&gt;
&lt;p&gt;We can now add the two nodes on our swarm as workers&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu02:~# docker swarm join --token SWMTKN-1-5hidm3k2ihs0m938oqvzpa22jt5ueezpcohi999cojeoebz279-272b0wt3h8qzgtiab447rsl9g 192.168.254.107:2377
This node joined a swarm as a worker.
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu03:~# docker swarm join --token SWMTKN-1-5hidm3k2ihs0m938oqvzpa22jt5ueezpcohi999cojeoebz279-272b0wt3h8qzgtiab447rsl9g 192.168.254.107:2377
This node joined a swarm as a worker.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To verify nodes have been added, you have two options:&lt;/p&gt;
&lt;p&gt;On the manager, check the &lt;code&gt;STATUS&lt;/code&gt; and &lt;code&gt;AVAILABILITY&lt;/code&gt; tab&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker node ls
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On the workers, check the &lt;code&gt;Swarm&lt;/code&gt; info&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker swarm info
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;More Swarm operations&lt;/h3&gt;
&lt;p&gt;Don't worry if you forget the token as you can always view it on the manager&lt;/p&gt;
&lt;p&gt;Worker token:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker swarm join-token worker
To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-5hidm3k2ihs0m938oqvzpa22jt5ueezpcohi999cojeoebz279-272b0wt3h8qzgtiab447rsl9g 192.168.254.107:2377
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Manager token:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker swarm join-token manager
To add a manager to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-5hidm3k2ihs0m938oqvzpa22jt5ueezpcohi999cojeoebz279-33y4gojorjmnj3r8i2qqlia36 192.168.254.107:2377
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Leaving the swarm&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu03:~# docker swarm leave
Node left the swarm.
root@ubuntu03:~# docker info | grep Swarm
Swarm: inactive
WARNING: No swap limit support
root@ubuntu03:~#
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On the manager, we can see ubuntu03 as &lt;code&gt;down&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
jld72ruw3baib8ws6t7ap0hnj *   ubuntu01-manager    Ready               Active              Leader              18.09.1
sb0y021yqdk92eaq41j5wq7m5     ubuntu02            Ready               Active                                  18.09.1
0y3pifnwhdopm8pdioyuj027z     ubuntu03            Down                Active                                  18.09.1
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Adding service on the swarm&lt;/h3&gt;
&lt;p&gt;We'll be using our static site as an example, and using below Dockerfile&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;FROM http:2.4
COPY ./static-site /usr/local/apache2/htdocs/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Build the docker image&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker build -t my-site .
Sending build context to Docker daemon  6.903MB
Step 1/2 : FROM httpd:2.4
 ---&amp;gt; 0eba3d04566e
Step 2/2 : COPY ./static-site /usr/local/apache2/htdocs/
 ---&amp;gt; a57a8ce77062
Successfully built a57a8ce77062
Successfully tagged my-site:latest
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Running the service&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker service create --name my-site --replicas 1 static-site
image static-site:latest could not be accessed on a registry to record
its digest. Each node will access static-site:latest independently,
possibly leading to different nodes running different
versions of the image.

08l8qxsjxt1qijgytr5k17n9l
overall progress: 0 out of 1 tasks
1/1: No such image: static-site:latest
^COperation continuing in background.
Use `docker service ps 08l8qxsjxt1qijgytr5k17n9l` to check progress.
root@ubuntu01-manager:~# docker service ps 08l8qxsjxt1qijgytr5k17n9l
ID                  NAME                IMAGE                NODE                DESIRED STATE       CURRENT STATE             ERROR                              PORTS
uib5adqc4z3l        my-site.1           static-site:latest   ubuntu03            Ready               Preparing 2 seconds ago
0qfuufmn0ck5         \_ my-site.1       static-site:latest   ubuntu01-manager    Shutdown            Rejected 3 seconds ago    &amp;quot;No such image: static-site:la…&amp;quot;
gc9evj8hlf3p         \_ my-site.1       static-site:latest   ubuntu03            Shutdown            Rejected 8 seconds ago    &amp;quot;No such image: static-site:la…&amp;quot;
6wnpz8qt1a0j         \_ my-site.1       static-site:latest   ubuntu01-manager    Shutdown            Rejected 13 seconds ago   &amp;quot;No such image: static-site:la…&amp;quot;
1vjomd5ym3ge         \_ my-site.1       static-site:latest   ubuntu01-manager    Shutdown            Rejected 17 seconds ago   &amp;quot;No such image: static-site:la…&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Looks like we have a problem.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker image ls
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
my-site             latest              a57a8ce77062        4 minutes ago       139MB
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can see the image on manager, but somehow docker can't see it? &lt;code&gt;:thinking:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;With little bit of digging (read: a quick google search), I learned that the image created on the manager is available only on itself, and not on the whole swarm. The warning message &lt;code&gt;image static-site:latest could not be accessed on a registry to record its digest&lt;/code&gt; is the hint. The solution is to push the image on a registry, either on Docker Hub or setup a local service. We'll do the latter.&lt;/p&gt;
&lt;h3&gt;Setting up a local registry&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker service create --name registry --publish published=5000,target=5000 registry:2
y7vkch2wbkq9ugrr6b73xtlf2
overall progress: 1 out of 1 tasks
1/1: running   [==================================================&amp;gt;]
verify: Service converged
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker service ps registry
ID                  NAME                IMAGE               NODE                DESIRED STATE       CURRENT STATE                ERROR               PORTS
m9bshi82ni37        registry.1          registry:2          ubuntu02            Running             Running about a minute ago
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# curl 127.0.0.1:5000/v2/
{}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pushing our image to local registry&lt;/p&gt;
&lt;p&gt;The syntax is &lt;code&gt;docker tag &amp;lt;local&amp;gt; &amp;lt;remote&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker tag my-site:latest 127.0.0.1:5000/my-site
root@ubuntu01-manager:~# docker push 127.0.0.1:5000/my-site
The push refers to repository [127.0.0.1:5000/my-site]
4a66788036dc: Pushed
8fb9d4da1d47: Pushed
679b6a350e9d: Pushed
bc313b7c45f1: Pushed
7fb2893e5a45: Pushed
0a07e81f5da3: Pushed
latest: digest: sha256:f202f0e1ded4caedc8f09a48a8c558214fbae3b495b40b20d7964786cfba5238 size: 1578
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can now see our image on two workers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu02:~# curl 127.0.0.1:5000/v2/_catalog
{&amp;quot;repositories&amp;quot;:[&amp;quot;my-site&amp;quot;]}
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu03:~# curl 127.0.0.1:5000/v2/_catalog
{&amp;quot;repositories&amp;quot;:[&amp;quot;my-site&amp;quot;]}
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Re-trying service creation&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker service create --name static-site --replicas 1 127.0.0.1:5000/my-site
8zq8ke8gtbgte0rfdchx4xrsp
overall progress: 1 out of 1 tasks
1/1: running   [==================================================&amp;gt;]
verify: Service converged
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker service ps static-site
ID                  NAME                IMAGE                           NODE                DESIRED STATE       CURRENT STATE            ERROR               PORTS
u2xer3ok2zpn        static-site.1       127.0.0.1:5000/my-site:latest   ubuntu01-manager    Running             Running 39 seconds ago
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The service is now running... or is it? &lt;em&gt;cue Vsauce music&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We forgot to publish a port so we can't actually verify our site is runnig without issues.&lt;/p&gt;
&lt;h3&gt;Updating a service&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker service update --publish-add published=80,target=80 static-site
static-site
overall progress: 1 out of 1 tasks
1/1: running   [==================================================&amp;gt;]
verify: Service converged
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu02:~# curl -s 127.0.0.1 | head
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width=device-width, initial-scale=1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;jtp.sh&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/theme/css/main.min.css&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hooray!&lt;/p&gt;
&lt;h3&gt;Adding replicas&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker service update --replicas 10 static-site
static-site
overall progress: 10 out of 10 tasks
1/10: running   [==================================================&amp;gt;]
2/10: running   [==================================================&amp;gt;]
3/10: running   [==================================================&amp;gt;]
4/10: running   [==================================================&amp;gt;]
5/10: running   [==================================================&amp;gt;]
6/10: running   [==================================================&amp;gt;]
7/10: running   [==================================================&amp;gt;]
8/10: running   [==================================================&amp;gt;]
9/10: running   [==================================================&amp;gt;]
10/10: running   [==================================================&amp;gt;]
verify: Service converged
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@ubuntu01-manager:~# docker service ps static-site
ID                  NAME                IMAGE                           NODE                DESIRED STATE       CURRENT STATE            ERROR               PORTS
leydfex4rznr        static-site.1       127.0.0.1:5000/my-site:latest   ubuntu01-manager    Running             Running 3 minutes ago
u2xer3ok2zpn         \_ static-site.1   127.0.0.1:5000/my-site:latest   ubuntu01-manager    Shutdown            Shutdown 3 minutes ago
9eyoy7pi0qm7        static-site.2       127.0.0.1:5000/my-site:latest   ubuntu03            Running             Running 40 seconds ago
hhain8hzny32        static-site.3       127.0.0.1:5000/my-site:latest   ubuntu03            Running             Running 40 seconds ago
schadoh2hxy4        static-site.4       127.0.0.1:5000/my-site:latest   ubuntu03            Running             Running 39 seconds ago
zncdx54fg41l        static-site.5       127.0.0.1:5000/my-site:latest   ubuntu01-manager    Running             Running 57 seconds ago
98v66jxi5lzq        static-site.6       127.0.0.1:5000/my-site:latest   ubuntu01-manager    Running             Running 53 seconds ago
no4bywzm4fat        static-site.7       127.0.0.1:5000/my-site:latest   ubuntu01-manager    Running             Running 53 seconds ago
uxajuy9d5vo3        static-site.8       127.0.0.1:5000/my-site:latest   ubuntu02            Running             Running 39 seconds ago
glry53msfldf        static-site.9       127.0.0.1:5000/my-site:latest   ubuntu02            Running             Running 38 seconds ago
z4xnqiu9j46x        static-site.10      127.0.0.1:5000/my-site:latest   ubuntu02            Running             Running 39 seconds ago
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Each node has at least 3 replicas running.&lt;/p&gt;
&lt;p&gt;Service availability on a swarm shouldn't be a concern (with given enough replicas) as replicas are launched as soon as one of the workers went down or is being drained.&lt;/p&gt;
&lt;h3&gt;References:&lt;/h3&gt;
&lt;p&gt;Swarm Tutorial: &lt;a href="https://docs.docker.com/engine/swarm/swarm-tutorial/"&gt;https://docs.docker.com/engine/swarm/swarm-tutorial/&lt;/a&gt;&lt;br&gt;
Docker CLI reference: &lt;a href="https://docs.docker.com/engine/reference/commandline/docker/"&gt;https://docs.docker.com/engine/reference/commandline/docker/&lt;/a&gt;&lt;br&gt;
Docker swarm availability: &lt;a href="https://docs.docker.com/engine/swarm/swarm-tutorial/drain-node/"&gt;https://docs.docker.com/engine/swarm/swarm-tutorial/drain-node/&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>Creating Docker to test our static site</title><link href="https://jtp.sh/creating-docker-to-test-our-static-site.html" rel="alternate"></link><published>2019-02-08T19:51:41+08:00</published><updated>2019-02-08T19:51:41+08:00</updated><author><name>jp</name></author><id>tag:jtp.sh,2019-02-08:/creating-docker-to-test-our-static-site.html</id><summary type="html">&lt;h3&gt;Docker from base image (Manual)&lt;/h3&gt;
&lt;p&gt;Since I'm trying to learn Docker, I tried creating image from scratch. Creating base Ubuntu image is straightforward using &lt;code&gt;deboostrap&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt install debootstrap
sudo debootstrap bionic bionic
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once complete we can now import the image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="n"&gt;bionic&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;bionic&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(You …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Docker from base image (Manual)&lt;/h3&gt;
&lt;p&gt;Since I'm trying to learn Docker, I tried creating image from scratch. Creating base Ubuntu image is straightforward using &lt;code&gt;deboostrap&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt install debootstrap
sudo debootstrap bionic bionic
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once complete we can now import the image:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="n"&gt;bionic&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;bionic&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(You can safely remove the files created from the previous command.)&lt;/p&gt;
&lt;h3&gt;Creating Dockerfile&lt;/h3&gt;
&lt;p&gt;(See &lt;a href="https://docs.docker.com/engine/reference/builder/"&gt;Docker Documentation&lt;/a&gt; for more information.)&lt;/p&gt;
&lt;p&gt;Save the file as &lt;code&gt;Dockerfile.base&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# We&amp;#39;ll use the image we create earlier
# Every Dockefile starts with this instruction
FROM bionic:latest

# Install Apache
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y apache2

# Create documentroot
RUN mkdir /var/www/jtp.sh

# Remove default vhost
RUN rm /etc/apache2/sites-enabled/000-default.conf

# Copy of own vhost
COPY apache/jtp.sh.conf /etc/apache2/sites-enabled/jtp.sh.conf

# Copy our static files
COPY output/ /var/www/jtp.sh

# Apache runs on 80 so we&amp;#39;ll have to expose that

EXPOSE 80

# To keep docker running, the process has be kept on foreground
# otherwise it will just exit as soon as the command is done
# That is why it&amp;#39;s not advisable to use
# `service apache2 start`
# CMD vs RUN - There should be only one CMD
# CMD is a way to tell how to run the container
CMD apachectl -D FOREGROUND
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Build the image with &lt;code&gt;docker build -f Dockerfile.base -t jtp.sh:1.0 .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-f&lt;/code&gt; Use a specific Dockerfile.base (default is Dockerfile)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-t&lt;/code&gt; Give our image a &lt;code&gt;name:tag&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker build -f Dockerfile.base -t jtp.sh:1.0 .
Sending build context to Docker daemon   54.6MB
Step 1/8 : FROM bionic:latest
 ---&amp;gt; 278a86f574bb
Step 2/8 : RUN apt-get update &amp;amp;&amp;amp; apt-get install -y apache2
 ---&amp;gt; Using cache
 ---&amp;gt; ab1c385bfc47
Step 3/8 : RUN mkdir /var/www/jtp.sh
 ---&amp;gt; Using cache
 ---&amp;gt; 36a30a5a9f23
Step 4/8 : RUN rm /etc/apache2/sites-enabled/000-default.conf
 ---&amp;gt; Using cache
 ---&amp;gt; 7d1db1fd3f50
Step 5/8 : COPY apache/jtp.sh.conf /etc/apache2/sites-enabled/jtp.sh.conf
 ---&amp;gt; Using cache
 ---&amp;gt; da8ba0ce5cd9
Step 6/8 : COPY output/ /var/www/jtp.sh
 ---&amp;gt; 698bdade8eb5
Step 7/8 : EXPOSE 80
 ---&amp;gt; Running in 4e21cb556f5e
Removing intermediate container 4e21cb556f5e
 ---&amp;gt; a2b900c04e10
Step 8/8 : CMD apachectl -D FOREGROUND
 ---&amp;gt; Running in 80c128065876
Removing intermediate container 80c128065876
 ---&amp;gt; f2ec0e584d5d
Successfully built f2ec0e584d5d
Successfully tagged jtp.sh:1.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can confirm the new image has been created:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker image ls jtp.sh:1.0
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
jtp.sh              1.0                 f2ec0e584d5d        46 seconds ago      364MB
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Running the container:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker container run -p 8000:80 -d jtp.sh:1.0
ebce0f19de8df6bcfd3b998dac0637e7e80843e0b512b99f1e74f6e150fb7ca9

docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS              PORTS                  NAMES
ebce0f19de8d        jtp.sh:1.0          &amp;quot;/bin/sh -c &amp;#39;apachec…&amp;quot;   About a minute ago   Up About a minute   0.0.0.0:8000-&amp;gt;80/tcp   inspiring_volhard
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;-p&lt;/code&gt; Setup port-forwarding&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-d&lt;/code&gt; Run in background&lt;/p&gt;
&lt;p&gt;We can now see our site is running by visiting &lt;code&gt;localhost:8000&lt;/code&gt;.&lt;/p&gt;</content></entry><entry><title>Test first post</title><link href="https://jtp.sh/test-first-post.html" rel="alternate"></link><published>2019-02-07T21:15:57+08:00</published><updated>2019-02-07T21:15:57+08:00</updated><author><name>jp</name></author><id>tag:jtp.sh,2019-02-07:/test-first-post.html</id><summary type="html">&lt;p&gt;This is a new first post. Pelican &lt;a href="https://github.com/getpelican/pelican/wiki/Tips-n-Tricks"&gt;Tips n Tricks&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is a new first post. Pelican &lt;a href="https://github.com/getpelican/pelican/wiki/Tips-n-Tricks"&gt;Tips n Tricks&lt;/a&gt;&lt;/p&gt;</content></entry></feed>